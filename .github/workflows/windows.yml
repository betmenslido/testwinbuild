name: Windows
on:
  push:

permissions:
  contents: read

jobs:
  make:
    strategy:
      matrix:
        include:
          - os: 2022
            vc: 2019
            vcvars: '-vcvars_ver=14.2' # VS 2022 17.13.x is broken at windows-2022
      fail-fast: false

    runs-on: windows-${{ matrix.os }}

    if: >-
      ${{!(false
      || contains(github.event.head_commit.message, '[DOC]')
      || contains(github.event.head_commit.message, '[skipci]')
      || contains(github.event.head_commit.message, 'Document')
      )}}

    name: Windows ${{ matrix.os }}/Visual C++ ${{ matrix.vc }}

    env:
      GITPULLOPTIONS: --no-tags origin ${{ github.ref }}
      VCPKG_DEFAULT_TRIPLET: x64-windows

    steps:
      - uses: ruby/setup-ruby@e34163cd15f4bb403dcd72d98e295997e6a55798 # v1.238.0
        with:
          ruby-version: '3.1'
          bundler: none
          windows-toolchain: none

      - name: Install libraries with scoop
        run: |
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
          iwr -useb get.scoop.sh | iex
          # Join-Path (Resolve-Path ~).Path "scoop\shims" >> $Env:GITHUB_PATH
          scoop install uutils-coreutils
        shell: pwsh

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: volume info
        run: |
          Get-ChildItem
          pwd
        shell: pwsh

      - name: setup env
        # Available Ruby versions: https://github.com/actions/runner-images/blob/main/images/windows/Windows2019-Readme.md#ruby
        # %TEMP% is inconsistent with %TMP% and test-all expects they are consistent.
        # https://github.com/actions/virtual-environments/issues/712#issuecomment-613004302
        run: |
          ::- Set up VC ${{ matrix.vc }}
          set vswhere="%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"
          for /f "delims=;" %%I in ('%vswhere% -latest -property installationPath') do (
            set VCVARS="%%I\VC\Auxiliary\Build\vcvarsall.bat"
          )
          set VCVARS
          set | C:\Users\runneradmin\scoop\shims\uutils sort > old.env
          call %VCVARS% ${{ 'amd64' }} ${{ matrix.vcvars || '' }}
          nmake -f nul
          set TMP=%USERPROFILE%\AppData\Local\Temp
          set TEMP=%USERPROFILE%\AppData\Local\Temp
          set MAKEFLAGS=l
          set /a TEST_JOBS=(15 * %NUMBER_OF_PROCESSORS% / 10) > nul
          set | C:\Users\runneradmin\scoop\shims\uutils sort > new.env
          C:\Users\runneradmin\scoop\shims\uutils comm -13 old.env new.env >> %GITHUB_ENV%
          del *.env

      - name: compiler version
        run: cl

      - name: volume info
        run: Get-Volume
        shell: pwsh

      - name: nmake
        run: |
          Get-ChildItem
          pwd
          nmake
        shell: pwsh

defaults:
  run:
    shell: cmd
